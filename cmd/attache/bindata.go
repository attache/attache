// Code generated by go-bindata. DO NOT EDIT.
// sources:
// templates/new/Taskfile.yml.tpl (126B)
// templates/new/attache.json.tpl (59B)
// templates/new/dev.env.tpl (60B)
// templates/new/gitignore.tpl (28B)
// templates/new/go.mod.tpl (190B)
// templates/new/index.go.html.tpl (150B)
// templates/new/layout.go.html.tpl (251B)
// templates/new/main.go.tpl (1.642kB)
// templates/new/prettierignore.tpl (36B)
// templates/gen/model.go.tpl (1.454kB)
// templates/gen/routes.go.tpl (2.537kB)
// templates/gen/routes.json.go.tpl (2.055kB)
// templates/gen/view_create.go.html.tpl (691B)
// templates/gen/view_list.go.html.tpl (861B)
// templates/gen/view_update.go.html.tpl (891B)

package main

import (
	"bytes"
	"compress/gzip"
	"crypto/sha256"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes  []byte
	info   os.FileInfo
	digest [sha256.Size]byte
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templatesNewTaskfileYmlTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\xca\x31\x0e\xc2\x30\x0c\x85\xe1\xdd\xa7\xf8\x55\xe6\x3a\x03\x5b\x6e\x53\x51\x03\x11\x90\xa0\xd8\xe4\xfc\x28\x30\x77\x7a\x4f\xfa\xfe\x13\xf7\x88\xb7\xe7\x94\x62\xf3\xc7\xb5\x3c\x4d\x77\x1b\x22\xc3\xba\x97\x56\x33\xcb\x79\x11\x99\xe6\x59\x20\xcc\x63\x2e\x5c\x5e\xbb\xff\x1f\xac\xdc\xda\x8f\x58\x07\x9a\x54\x55\x40\xc0\x63\xeb\x47\x79\xff\x54\xf4\x1b\x00\x00\xff\xff\x59\x33\x4f\x31\x7e\x00\x00\x00")

func templatesNewTaskfileYmlTplBytes() ([]byte, error) {
	return bindataRead(
		_templatesNewTaskfileYmlTpl,
		"templates/new/Taskfile.yml.tpl",
	)
}

func templatesNewTaskfileYmlTpl() (*asset, error) {
	bytes, err := templatesNewTaskfileYmlTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/new/Taskfile.yml.tpl", size: 126, mode: os.FileMode(0644), modTime: time.Unix(1606695221, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x65, 0x4, 0x3a, 0x28, 0xf, 0xb, 0x96, 0xd, 0xff, 0xea, 0x58, 0x6d, 0x3c, 0xcc, 0xd1, 0x66, 0xb6, 0x2c, 0xb2, 0x3d, 0x4f, 0xcc, 0x8e, 0x4, 0xec, 0x9c, 0x33, 0xce, 0x38, 0x91, 0x8f, 0x5c}}
	return a, nil
}

var _templatesNewAttacheJsonTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xaa\xe6\x52\x50\x50\x50\x50\x72\xce\xcf\x2b\x49\xad\x28\x09\xa9\x2c\x48\x55\xb2\x52\x50\xaa\xae\xd6\xf3\x4b\xcc\x4d\xad\xad\x55\xd2\x81\xc8\x3b\x06\x78\xfa\xe7\xe5\x54\x2a\x59\x29\x54\x57\xeb\x39\x06\x78\xd6\xd6\x72\xd5\x02\x02\x00\x00\xff\xff\x58\xef\xcd\x35\x3b\x00\x00\x00")

func templatesNewAttacheJsonTplBytes() ([]byte, error) {
	return bindataRead(
		_templatesNewAttacheJsonTpl,
		"templates/new/attache.json.tpl",
	)
}

func templatesNewAttacheJsonTpl() (*asset, error) {
	bytes, err := templatesNewAttacheJsonTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/new/attache.json.tpl", size: 59, mode: os.FileMode(0644), modTime: time.Unix(1606695221, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xe5, 0x5b, 0x7f, 0x6f, 0xd1, 0x6b, 0x40, 0xf, 0xca, 0x68, 0xec, 0xea, 0x36, 0x6, 0xd8, 0x64, 0xaf, 0x55, 0x2, 0xb4, 0xd0, 0xe4, 0xa6, 0x7c, 0xbc, 0xd7, 0x8a, 0x50, 0xa9, 0x5, 0xd1, 0xe8}}
	return a, nil
}

var _templatesNewDevEnvTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x52\x56\x70\x49\x2c\x49\x4c\x4a\x2c\x4e\x55\x48\xce\xcf\xcb\x4b\x4d\x2e\xc9\xcc\xcf\xe3\x72\x71\x8a\x77\x09\xf2\x0c\x73\x0d\xb2\x2d\x2e\xcc\xc9\x2c\x49\x35\x06\x8b\x04\xfb\xd9\x16\xa7\x26\x17\xa5\x96\xe8\xa7\xa4\x96\xe9\xa5\x24\x01\x02\x00\x00\xff\xff\xac\x66\xe1\x32\x3c\x00\x00\x00")

func templatesNewDevEnvTplBytes() ([]byte, error) {
	return bindataRead(
		_templatesNewDevEnvTpl,
		"templates/new/dev.env.tpl",
	)
}

func templatesNewDevEnvTpl() (*asset, error) {
	bytes, err := templatesNewDevEnvTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/new/dev.env.tpl", size: 60, mode: os.FileMode(0644), modTime: time.Unix(1606695221, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x78, 0x6d, 0x44, 0x41, 0xc6, 0xd, 0x27, 0x8a, 0xa4, 0xdf, 0x25, 0xac, 0x27, 0x60, 0xee, 0xeb, 0x77, 0x4b, 0xd5, 0x8f, 0xe2, 0xc, 0xd5, 0x81, 0x3e, 0x3e, 0xb2, 0x5, 0x25, 0xcb, 0x12, 0xe1}}
	return a, nil
}

var _templatesNewGitignoreTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x52\x56\x48\x2c\x28\xc8\xc9\x4c\x4e\x2c\xc9\xcc\xcf\x53\x28\x4e\x4d\x2e\x4a\x2d\x29\xe6\x82\xd0\x80\x00\x00\x00\xff\xff\xbf\x72\xaa\xce\x1c\x00\x00\x00")

func templatesNewGitignoreTplBytes() ([]byte, error) {
	return bindataRead(
		_templatesNewGitignoreTpl,
		"templates/new/gitignore.tpl",
	)
}

func templatesNewGitignoreTpl() (*asset, error) {
	bytes, err := templatesNewGitignoreTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/new/gitignore.tpl", size: 28, mode: os.FileMode(0644), modTime: time.Unix(1606695221, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x5f, 0xbd, 0x30, 0x4d, 0xef, 0x14, 0x66, 0xb6, 0x2c, 0x38, 0x69, 0x41, 0xa9, 0x6e, 0xf, 0x6a, 0xd3, 0x36, 0x1d, 0x43, 0x1b, 0xb2, 0xef, 0x65, 0xc, 0x4c, 0x5c, 0x94, 0x47, 0xf5, 0xd0, 0x50}}
	return a, nil
}

var _templatesNewGoModTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\xcd\xb1\x0e\xc2\x30\x0c\x04\xd0\x19\x7f\x85\x47\x18\x1a\xd4\x81\x11\x24\x24\x46\x66\xf6\x90\x9a\xd6\x52\x1a\x83\x49\x26\xcb\xff\x8e\x40\xb0\xb0\x75\xba\xe5\xee\xdd\x2c\x43\xcb\x84\x66\xe1\xc4\xea\x0e\x30\x0a\xf6\xa1\xdf\x01\x28\x3d\x1a\x2b\xe1\x1a\x56\x23\xd7\xa9\x5d\x43\x92\x79\x1b\x6b\x8d\x69\xa2\x5f\xbe\x87\x17\xd2\x27\x4b\x71\x87\x0d\x80\x19\xf2\x0d\xc3\x59\x52\xcc\xc7\x6f\xa7\x73\x07\xa5\x7b\x8e\x69\x89\x86\xfb\x03\x9a\xfd\x51\x9f\x13\xb3\x0e\xa9\x0c\xe8\xfe\x0a\x00\x00\xff\xff\xa6\x66\x03\xac\xbe\x00\x00\x00")

func templatesNewGoModTplBytes() ([]byte, error) {
	return bindataRead(
		_templatesNewGoModTpl,
		"templates/new/go.mod.tpl",
	)
}

func templatesNewGoModTpl() (*asset, error) {
	bytes, err := templatesNewGoModTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/new/go.mod.tpl", size: 190, mode: os.FileMode(0644), modTime: time.Unix(1606695221, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xf3, 0x4e, 0xdd, 0xc7, 0x7b, 0x4f, 0xac, 0xae, 0x80, 0x91, 0xc, 0x39, 0xdf, 0x88, 0xbe, 0x8d, 0x99, 0x3b, 0xc4, 0x40, 0x57, 0x83, 0x69, 0x88, 0xf, 0x52, 0xb2, 0xc7, 0xc7, 0x75, 0xcd, 0xaf}}
	return a, nil
}

var _templatesNewIndexGoHtmlTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xcc\x31\x0e\x42\x21\x10\x84\xe1\x9e\x53\xac\xdc\xc4\x53\x58\x23\xac\x71\x13\x64\xc9\x7b\x63\x41\x36\x73\x77\x9b\x97\xd8\x50\x7f\x33\x7f\x44\xd3\x97\x0d\x95\x0c\x43\xd7\x4c\x3e\xb4\x57\xff\x68\x84\x8e\x46\xa6\xff\xe0\xc4\xea\x7a\x66\x72\x43\xf5\xb0\x89\xbd\x3d\xbd\xad\x4c\xa6\xab\x2b\x70\x59\xfe\x3d\xe4\x0e\x94\xfa\x56\x29\x73\x76\xab\x05\xe6\xe3\x96\xae\xfb\x2f\x00\x00\xff\xff\x06\x47\x5f\x5d\x96\x00\x00\x00")

func templatesNewIndexGoHtmlTplBytes() ([]byte, error) {
	return bindataRead(
		_templatesNewIndexGoHtmlTpl,
		"templates/new/index.go.html.tpl",
	)
}

func templatesNewIndexGoHtmlTpl() (*asset, error) {
	bytes, err := templatesNewIndexGoHtmlTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/new/index.go.html.tpl", size: 150, mode: os.FileMode(0644), modTime: time.Unix(1606695221, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x99, 0xc8, 0xcd, 0xf4, 0x76, 0x6c, 0xa1, 0x6d, 0x9f, 0x55, 0x8e, 0xc9, 0x7a, 0xc9, 0xcf, 0x21, 0xf6, 0x59, 0x13, 0xa9, 0x59, 0x60, 0xfe, 0x33, 0x9c, 0x3b, 0xf, 0xd3, 0x1f, 0x7, 0x2d, 0xcd}}
	return a, nil
}

var _templatesNewLayoutGoHtmlTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb2\x51\x74\xf1\x77\x0e\x89\x0c\x70\x55\xc8\x28\xc9\xcd\xb1\xe3\xb2\x81\x50\x0a\x0a\x0a\x0a\x36\x19\xa9\x89\x29\x10\x26\x98\x5b\x92\x59\x92\x93\x6a\x57\x5d\x9d\x94\x93\x9f\x9c\xad\xa0\x04\xe6\x2a\x29\xe8\xd5\xd6\x46\x47\xeb\xf9\x25\xe6\xa6\xc6\xc6\x56\x57\xa7\xe6\xa5\xd4\xd6\xda\xe8\x43\x94\xc2\xb5\xc2\xf5\x14\x97\x54\xe6\xa4\x16\x83\x35\x41\xd5\x62\x51\x93\x5c\x94\x59\x50\x82\xa9\xc8\x46\x1f\xe1\x1e\x9b\xa4\xfc\x94\x4a\x2c\xe6\x83\x84\xc1\x1a\x91\xa4\x90\x4d\x80\x68\xb3\xd1\x07\x7b\x12\x10\x00\x00\xff\xff\xd6\xc2\xdf\x26\xfb\x00\x00\x00")

func templatesNewLayoutGoHtmlTplBytes() ([]byte, error) {
	return bindataRead(
		_templatesNewLayoutGoHtmlTpl,
		"templates/new/layout.go.html.tpl",
	)
}

func templatesNewLayoutGoHtmlTpl() (*asset, error) {
	bytes, err := templatesNewLayoutGoHtmlTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/new/layout.go.html.tpl", size: 251, mode: os.FileMode(0644), modTime: time.Unix(1606695221, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x66, 0xb7, 0xff, 0xed, 0xfe, 0xac, 0x1e, 0x7f, 0xdc, 0xb9, 0xe0, 0xea, 0x59, 0xaf, 0xd3, 0xf2, 0x4a, 0x4, 0xc2, 0x4f, 0x1f, 0x17, 0xaa, 0xcf, 0x3e, 0x90, 0xd, 0xa, 0x55, 0x13, 0xe0, 0x26}}
	return a, nil
}

var _templatesNewMainGoTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x54\xdf\x6f\xe3\x36\x0c\x7e\xf7\x5f\xc1\x19\x87\xc1\x29\x5a\xab\xc0\xb0\x97\x02\xf7\xb0\x2e\xe9\x5d\x86\x5e\x7a\x4b\xba\xee\x61\x18\x0a\x45\x66\x12\xae\xb2\xe4\x4a\x74\xda\xcc\xf0\xff\x7e\x90\x65\xe7\x07\x90\xe6\x21\x36\x29\xf2\xfb\xf8\x51\x34\x2b\xa9\x5e\xe4\x1a\xa1\x94\x64\x92\x84\xca\xca\x3a\x86\x2c\x01\x00\x48\x0d\xb2\xd8\x30\x57\x69\x34\xb5\x5d\xc7\xb7\xee\x4f\x08\x28\x24\xcb\xa5\xf4\x08\x85\xa3\x2d\x3a\x3f\xf8\xb3\xda\x28\x5b\x96\x68\x18\x78\x83\xa0\xc9\xa0\x87\x9d\xad\xc1\x20\x16\xa3\x21\xea\x19\xd2\x35\xf1\xa6\x5e\xe6\xca\x96\xa2\x94\xcc\x46\xac\xed\x95\x7f\xd5\xc4\xf8\x4b\xda\x47\x2d\xa2\x79\x3e\x29\x86\x5f\x45\x7a\x51\xee\xfc\xab\x4e\x43\xd4\xb7\xdd\xe2\xcf\xfb\xf3\x29\xff\x49\xf5\xa2\x44\xb5\x7e\xef\x08\xfa\x9f\x10\xf0\xdd\x7a\x5e\x3b\x0c\x79\x43\xa2\x64\x96\x6a\x83\x51\xfc\x11\x44\xef\x1f\x9e\x69\x32\x4a\x12\xde\x55\x08\x4d\x93\xcf\x64\x89\x6d\x0b\x9e\x5d\xad\x18\x9a\x01\xca\xe1\x6b\x4d\x0e\x8b\xce\xee\xf3\xf2\x5b\xe9\xf1\x77\x6b\x18\xdf\x19\xf6\xa4\x4a\x56\x72\x49\x9a\x98\xd0\x9f\x44\x8f\x71\x25\x6b\xcd\x13\xb3\x25\x67\x4d\xd7\x5c\x21\x40\x5b\x59\x78\xc0\x23\xe7\x56\x3a\x92\x4b\x8d\x1e\x56\xce\x96\xd0\xdd\xc0\x8a\x34\x42\x65\xc9\x30\x16\xc0\x16\x96\x3b\xf8\x34\x99\x3d\x3d\xdf\x4d\xef\x27\x97\x50\x44\x64\x1f\x4e\x3c\x2a\x87\x2c\x0a\xdc\xe6\x68\xb6\xe7\x0a\x18\xdf\x9e\xf4\x4d\x59\x63\x50\xc5\x64\x79\x98\x88\xda\x93\x59\xc3\xa7\xf1\xed\xf3\x78\x3e\x7d\x9a\xcc\x41\x9a\x22\x9a\x8b\x59\x87\xda\x34\x40\x2b\x30\x96\x21\xff\xed\xfb\x14\xae\xda\xf6\x1c\xd9\x1d\x69\x5c\xa0\xdb\xa2\xeb\xc8\x7c\x78\xf5\xe0\x59\x32\xa9\x4e\x55\xaf\x32\x88\x7c\xc3\xa5\x28\xc8\x33\x14\xe4\x50\xb1\x75\xbb\x73\x88\x4f\x84\x6f\xfe\x50\x7e\xe5\xec\x96\x0a\xf4\xe0\xd0\x14\xe8\x42\xd1\xc7\x37\x00\x2b\xeb\x60\xdb\xa5\x90\xe9\x58\xa2\x71\x4a\xd1\x34\x57\x80\xa6\x80\x5e\xc3\x61\x74\x06\xd2\x05\x7a\x4f\xd6\x9c\x32\x4a\xa5\xd0\xf7\x7d\xf3\xa8\x6a\x87\xa0\xac\x7d\x21\x04\x1f\xc3\x93\x36\x49\x56\xb5\x51\x90\x29\xb8\xd8\xcf\xd6\x08\xa6\x86\x38\x7b\x83\xf0\x65\xe6\x73\xf4\x95\x35\x1e\xff\x76\xc4\xe8\x2e\xc1\xc1\x45\xef\x7f\xad\xd1\xf3\x68\x18\xc1\x0b\x78\x7c\x18\x3f\xdc\x00\x19\x62\x92\x9a\xfe\x0f\x64\x71\xf4\x2e\x44\x20\x3a\x73\x1f\x42\xc0\x97\xc9\x23\x88\xb3\x45\x7c\x99\x3c\x3e\x67\x03\xbc\xca\x83\x39\x35\x05\xbe\x67\xa3\x80\x36\xa4\x52\x70\x7d\x98\xdf\x27\xf4\x20\x43\xcf\xe6\xdd\x4d\x7c\x7d\xfc\x76\x9f\xa9\x4b\x48\x3b\x88\x34\xa0\x76\x6d\xd6\x1e\x4f\x8a\xdb\xa0\xd4\xbc\xf9\x90\xe2\x6b\x77\xfc\x01\xc7\x1f\x8b\x87\x59\x5c\x75\x51\xc4\x69\x33\xb3\xd1\xe5\xfe\xac\x94\xd5\x3f\x9e\xc3\x78\xfc\x1b\x3e\x22\xb7\x92\x0a\x9b\xb6\x49\x8e\x76\x08\xa4\x4c\x25\xa6\x37\x10\x1e\xf9\xcc\xbe\x65\xa3\xfc\x2f\x43\xef\xc7\x30\x5d\x98\x7d\x09\x41\xae\xc6\x83\xbf\x8d\xaf\x7b\x91\x71\x96\xa2\xa8\xb0\x98\xf7\xf5\x0b\x01\x4b\x6b\xd9\xb3\x93\x15\xc8\xaa\xd2\xa4\x24\x87\xc9\x0a\x73\x3a\x5c\xe8\xe9\x2e\x8a\xba\xab\xea\x12\xd0\x39\xb8\xf9\x7c\x58\x3f\x03\x50\xf6\xf3\x3e\xb8\x69\xe3\x7a\xa6\x55\x17\xfd\xd3\x67\x30\xa4\xe1\xa0\x53\xdb\x75\x7e\x27\x59\x6a\x6d\x32\x74\x2e\x06\xb7\x71\x79\x1d\x9f\xc9\xaa\xca\xe7\xb5\xc9\xd2\x9b\x5f\xaf\xaf\xaf\xd3\x51\x50\xf6\x23\x00\x00\xff\xff\xa1\xd3\x18\xf0\x6a\x06\x00\x00")

func templatesNewMainGoTplBytes() ([]byte, error) {
	return bindataRead(
		_templatesNewMainGoTpl,
		"templates/new/main.go.tpl",
	)
}

func templatesNewMainGoTpl() (*asset, error) {
	bytes, err := templatesNewMainGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/new/main.go.tpl", size: 1642, mode: os.FileMode(0644), modTime: time.Unix(1606695221, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xa4, 0x1b, 0xc5, 0x77, 0xe1, 0xe, 0xe2, 0x4f, 0xd0, 0x3e, 0x58, 0x21, 0x8d, 0x20, 0xd7, 0xe8, 0xaa, 0x2a, 0xcb, 0xfd, 0x77, 0xe9, 0x2d, 0x93, 0xab, 0xf, 0x83, 0x60, 0x3b, 0xc, 0x2d, 0x4}}
	return a, nil
}

var _templatesNewPrettierignoreTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x52\x56\xc8\x4c\xcf\xcb\x2f\x4a\x55\x48\xcf\x57\xf0\x08\xf1\xf5\x51\x28\x49\xcd\x2d\xc8\x49\x2c\x49\x2d\xe6\xd2\xd2\x4b\xcf\xd7\xcb\x28\xc9\xcd\x01\x04\x00\x00\xff\xff\x7f\x0c\x91\x76\x24\x00\x00\x00")

func templatesNewPrettierignoreTplBytes() ([]byte, error) {
	return bindataRead(
		_templatesNewPrettierignoreTpl,
		"templates/new/prettierignore.tpl",
	)
}

func templatesNewPrettierignoreTpl() (*asset, error) {
	bytes, err := templatesNewPrettierignoreTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/new/prettierignore.tpl", size: 36, mode: os.FileMode(0644), modTime: time.Unix(1606695221, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x14, 0xa0, 0xbb, 0x41, 0x2d, 0x12, 0x90, 0x92, 0xb2, 0x65, 0x4b, 0x4d, 0x6b, 0xc9, 0xd9, 0xe6, 0xd6, 0x94, 0x76, 0xe8, 0xde, 0xc9, 0x5b, 0xff, 0x61, 0x8b, 0x81, 0x19, 0x7a, 0xbc, 0x52, 0x13}}
	return a, nil
}

var _templatesGenModelGoTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x93\x41\x6b\xdc\x3e\x14\xc4\xcf\xd6\xa7\x78\x7f\xc3\x1f\xec\xb2\x51\xee\x29\x3e\x94\x86\xc2\xb2\xed\x1e\xd2\xf4\x54\x0a\xd1\x5a\xcf\x1b\x51\x59\xf6\x4a\x72\x83\x79\xe8\xbb\x17\x59\x8e\xbb\x5b\x36\xa5\xed\x61\x7b\xb2\x91\x67\x34\xc3\x6f\x70\x2f\xea\xaf\x62\x8f\xd0\x76\x12\xb5\x63\x4c\xb5\x7d\x67\x3d\x14\x2c\xcb\xa5\xf0\x62\x27\x1c\x5e\xbb\x83\xce\x59\x96\xef\x95\x7f\x1c\x76\xbc\xee\xda\x6b\xe1\xbd\xa8\x1f\xf1\xf9\x99\xb3\x92\x31\x3f\xf6\x08\x44\x7c\x2b\x5a\x0c\x01\x9c\xb7\x43\xed\x81\x80\xc8\x0a\xb3\x47\xe0\x1f\x62\x04\x7f\xa7\x50\x4b\x17\x02\x11\xff\x38\x49\xa6\x83\x10\xa2\xf5\x7e\xec\xa3\xf5\x41\xee\x6e\x72\x22\xfe\xb6\xd3\x43\x6b\x42\xc8\x1f\x5e\x13\xa1\x89\xa2\xc0\x58\x33\x98\x1a\xb6\xf8\xb4\x44\x15\x25\xcc\x3d\xf8\x1d\xd6\x9d\x95\x40\x60\xd1\x0f\xd6\x80\xc1\xa7\x62\xd1\x95\x8b\xbb\x68\xe1\xd5\xd1\xf1\xbd\xd8\x69\x2c\xca\x58\x59\x99\xfd\x0f\x37\x51\x6f\x95\xf1\x0d\xe4\xff\x1f\x72\xe0\x93\xec\xa8\xc3\x4f\xb7\x6c\x70\x2c\x4a\x28\xea\xa9\xb4\x83\xcf\x5f\xd2\x75\x2b\xf8\x26\xf4\x80\xf1\x40\x19\x8f\xb6\x11\x35\x52\x28\x81\x58\xf6\x2c\xad\x16\x31\xb1\x2c\x23\xba\x82\x33\xc4\xe0\x2a\x04\x96\xc5\xcf\xaa\x01\xbe\xc1\x31\x22\x84\x93\x82\x89\x17\x84\xb0\x9a\x71\xcd\xb7\xa1\x91\xc9\x1d\x58\x36\x97\xa9\x4e\xeb\xfc\x59\x6e\xcb\x89\xe0\x78\xbd\x5f\x47\x26\x9a\xec\x05\x6c\x6b\xe3\xd0\xfa\x0b\x90\x23\x02\xd5\x80\xe9\x3c\xf0\x6d\x97\x52\xe1\xb2\x0c\xcf\x37\x88\x34\x4f\x7f\x85\xdf\x62\x99\xf6\x48\x29\xb7\xd8\x88\x41\xfb\x0d\x8e\x93\xf0\x1c\xe6\x37\x8d\x47\x3b\xb3\xb6\xe8\x06\xed\xc1\x1d\x34\xbf\x9b\x5e\x27\xa6\x4a\xae\x00\xad\x85\x9b\x0a\x92\x80\xbf\x17\xce\x27\xcb\x5a\x16\x25\xcb\x54\x33\x09\xfe\xab\xc0\x28\x1d\x2d\x59\x2f\x8c\xaa\x0b\xb4\xb6\x9c\xda\xb5\x7c\x7d\x0b\x15\x28\xc9\x02\x9b\x9b\x87\x17\x66\xff\xd4\x4b\xe1\xf1\xd2\xb3\xa7\xd4\x7f\x39\xfb\xd2\xe0\xaf\x66\xff\x1e\x00\x00\xff\xff\xaa\xa9\xe2\x57\xae\x05\x00\x00")

func templatesGenModelGoTplBytes() ([]byte, error) {
	return bindataRead(
		_templatesGenModelGoTpl,
		"templates/gen/model.go.tpl",
	)
}

func templatesGenModelGoTpl() (*asset, error) {
	bytes, err := templatesGenModelGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/gen/model.go.tpl", size: 1454, mode: os.FileMode(0644), modTime: time.Unix(1606695221, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x32, 0xbf, 0x36, 0x5e, 0xa1, 0x49, 0xaa, 0xc1, 0xc4, 0xa2, 0xe8, 0x39, 0x49, 0x11, 0x6, 0x15, 0xab, 0x22, 0x98, 0x9e, 0x52, 0xa8, 0x29, 0xd3, 0xc6, 0x29, 0x5c, 0xc6, 0x33, 0xb9, 0x11, 0xa6}}
	return a, nil
}

var _templatesGenRoutesGoTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xdc\x94\xdb\x6f\xd3\x3e\x14\xc7\x9f\xe3\xbf\xc2\xbf\x48\x3f\xe4\xa0\xe2\x4e\x68\x4f\xa0\x0a\xc1\xda\x6e\x88\x6d\x54\x6b\x19\x8f\xc8\xb3\x4f\x5b\x6b\x8e\x93\x9d\x9c\xac\x4c\x91\xff\x77\x94\xf4\xb2\x2b\xac\xed\x26\xa4\xf1\x94\x8b\xce\xcd\xdf\xcf\xf7\x38\x57\xfa\x5c\x4d\x80\xa7\xca\x7a\xc6\x6c\x9a\x67\x48\x5c\xb0\x28\x1e\xa7\x14\xb3\x28\xf6\x40\xed\x29\x51\x5e\xbf\x1b\x45\xea\x4c\x15\xd0\x2e\x2e\x5c\xcc\x58\x14\x4f\x2c\x4d\xcb\x33\xa9\xb3\xb4\xad\x88\x94\x9e\xc2\xf2\x19\xb3\x84\xb1\x71\xe9\x35\x17\x9a\xbf\xae\x2a\xb9\x97\x79\x82\x9f\x34\xba\xca\x21\x84\x84\xef\xf7\x46\x3f\xaa\x4a\x0e\x75\x96\xc3\x9e\x4a\xc1\x85\x50\x55\xf2\x58\xa5\x10\xc2\x31\xcc\x44\xc2\x2b\x16\x55\x15\xb7\x63\x3e\x0f\x1a\x7a\x75\x0e\xfc\x4d\x08\x2c\x5a\xb4\x90\x27\xe0\x0d\xe0\xc1\xe8\xe8\x50\xe8\x16\x8f\x97\xe5\x9a\xc8\x10\xe4\xa2\xde\xf2\x53\x23\x28\x82\x38\x69\xca\x82\x2b\x1e\x2d\xf6\xfb\x64\x6f\x78\x08\x2c\x6c\x7d\xc0\x43\x5b\xd0\xfc\x84\xca\xb9\x16\x07\x44\xfe\xae\xc3\xb5\xec\x7e\x12\x89\xfc\xe8\x9c\xf0\x30\x13\x69\x66\xc0\x15\x72\x95\x94\x24\x2c\xb2\xe3\x26\xf8\xbf\x0e\xf7\xd6\xd5\xf9\xab\xf1\x7b\x88\x19\xf6\x15\x29\x27\x00\x31\x61\x51\x60\x91\x96\x43\xa0\x53\x0b\xb3\xae\x22\x25\x94\x73\xc9\x33\x4b\xea\x6c\x41\x5b\x0a\x7a\x33\xf5\xa9\x72\xce\xa5\x5c\x68\x78\x02\x17\x25\xd4\xf2\xb2\xc8\x9a\xfa\x17\xca\x7e\x86\xe9\xa9\x72\x25\x88\xd8\x9a\xba\xe9\xa5\x42\x4e\x0a\x27\x40\xfc\xae\xca\x2b\x8d\xaf\x81\xec\x03\x89\x57\xf3\xf0\x16\xb7\x26\x79\x7f\x97\xc1\x22\xa3\xd3\xe1\x37\x68\x9c\x80\xce\xd0\x1c\x67\xd4\xcf\x4a\x6f\x9a\xb8\xdb\xb0\xc4\xee\xce\x6e\xc2\xa2\x1a\xd4\x06\x14\xe7\x73\x3c\x37\xc8\x32\x37\xdb\xef\xc6\xed\xe4\x75\x60\x0e\xbe\x0e\xd7\xd8\xfe\x07\x80\xae\xd0\xa0\x1c\x28\x2c\xa0\x26\x2b\xee\x03\xf9\x93\x9c\x6b\xb2\x5f\x96\xa8\x3b\x74\x41\x67\x06\xae\x3d\x30\x77\xd4\x66\x6d\xef\xb9\xea\xb3\x2f\x00\x57\xc6\xda\xac\xd8\x35\x17\x63\x11\x34\x0d\xd4\x04\xc4\x38\x25\x39\xcc\xd1\x7a\x1a\x8b\x15\xef\x81\xa2\x69\x08\xed\xdb\xc4\x3e\x58\xd3\xf9\xff\x32\x6e\x2d\x74\xa8\x05\x38\xaa\xa5\x90\x5f\xe0\x6a\x48\x58\x6a\xea\x5b\x70\xa6\xb9\x72\x9e\x00\xf2\xdf\x5e\xcb\xbf\x68\x95\x6f\xcd\x82\xbd\x70\xab\x74\x7b\x87\xbd\x51\xef\x11\xb3\xcc\x96\x66\x29\xf2\xcc\x17\xf0\x1d\x2d\x01\xd6\x9e\x79\x01\x2e\x9a\xc9\x66\xdc\x03\x50\x06\x50\xbc\xdd\xd9\xa9\x5d\x14\x21\x50\x89\x7e\x23\x3f\x2d\x26\xeb\x82\x83\x6d\xa9\x3f\x30\x4b\xf8\x15\x00\x00\xff\xff\x6f\x1a\x98\x66\xe9\x09\x00\x00")

func templatesGenRoutesGoTplBytes() ([]byte, error) {
	return bindataRead(
		_templatesGenRoutesGoTpl,
		"templates/gen/routes.go.tpl",
	)
}

func templatesGenRoutesGoTpl() (*asset, error) {
	bytes, err := templatesGenRoutesGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/gen/routes.go.tpl", size: 2537, mode: os.FileMode(0644), modTime: time.Unix(1606695221, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xf1, 0x6d, 0xf8, 0x6, 0xdf, 0xcd, 0x4c, 0xa3, 0x90, 0x7a, 0xe6, 0xab, 0xf7, 0x5, 0x1b, 0xb5, 0x67, 0x27, 0xdc, 0xcf, 0x48, 0xfc, 0xe6, 0x18, 0xc5, 0x6, 0x3c, 0xd7, 0xf4, 0x1c, 0xd, 0x48}}
	return a, nil
}

var _templatesGenRoutesJsonGoTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xe4\x93\xc1\x6f\xd3\x30\x14\xc6\xcf\xf6\x5f\x61\x72\x40\x36\xaa\xdc\x0a\xed\x04\xea\x81\xad\xed\x00\x4d\x1d\x6a\x3b\x38\xa2\xd7\xf8\xb5\x35\x38\x76\xf6\xe2\x50\xaa\x28\xff\x3b\x4a\xdb\x15\x58\x07\x5b\xc7\xe0\xc0\x4e\x89\xf3\x5e\x5e\xde\xf7\xfb\xbe\xe4\x90\x7e\x86\x39\x8a\x0c\xac\xe7\xdc\x66\x79\xa0\x28\x24\x67\xc9\x2c\x8b\x09\x67\x89\xc7\xd8\x5e\xc4\x98\x37\xf7\x36\xb4\x6d\x28\xa3\x75\xcd\xc1\x40\x84\x29\x14\xd8\x2e\x2e\xd7\x67\xf4\x69\x30\xd6\xcf\xdb\x9f\x8a\xe0\x13\xce\x59\x32\xb7\x71\x51\x4e\x75\x1a\xb2\x36\xc4\x08\xe9\x02\xaf\xae\x09\x57\x9c\xcf\x4a\x9f\x0a\x99\x8a\x67\x55\xa5\x4f\x82\x8f\xf8\x35\x4e\x56\x39\xd6\xb5\x12\xa7\xfd\xc9\xc7\xaa\xd2\xe3\x34\xe4\x78\x02\x19\xba\xba\xae\x2a\x3d\x84\x0c\xeb\xfa\xcc\x16\x51\x2a\x51\x71\xb6\x14\x2f\xba\x22\xd5\x23\x2c\xf2\xe0\x0b\xfc\x40\x36\x22\x49\xc5\x19\x38\xd7\x12\x48\xb4\xa9\xf7\x8e\xa5\xd2\xaf\x9c\x93\x1e\x97\x32\x0b\x06\x5d\xa1\x77\xd3\x94\xe2\xcc\xce\xd6\xcd\x4f\xba\xc2\x5b\xd7\x0c\x66\xdb\x35\x75\x9f\x28\xd0\x00\x22\x38\x89\x44\x8a\xb3\x9a\xef\x6a\x23\xf4\x06\xe9\xed\xf8\x7c\x28\x97\x2d\x01\xce\x29\x5e\xdf\x5b\xd4\x2d\x82\xe8\xaa\x70\x59\x62\xa3\x9e\x33\x6b\x9a\x47\xa4\x07\x81\xb2\xf7\xe0\x4a\x94\x89\x35\x89\xe2\xec\x0b\x90\x88\x40\x73\x8c\xe2\xba\xd6\x9d\xd2\xef\x58\x4e\x31\xca\xa7\x9b\xf6\x96\xb0\x46\xbd\xbc\x4e\x62\xfb\x46\xb7\x2b\x7e\x60\x32\xc2\x34\x90\x19\x86\x38\x08\xa5\x37\xeb\xbe\x9f\x91\xc9\xa3\xce\x91\xe2\xac\xc1\x75\x0f\x96\x9b\x7d\x6e\xc3\xf9\xee\x7c\xfc\x6b\x9e\x43\x5c\x1e\x8c\x74\x1a\xcc\x6a\x17\x9b\x4d\xce\xf5\x08\xc1\x34\xd1\x21\x7d\x1c\xcc\xea\xe0\xac\xdc\xd1\x8c\xe6\x8f\xd1\x17\x3e\x03\x2a\x16\xe0\xe4\x66\x91\xad\x2d\xfb\x96\xfc\xee\x83\x7b\x06\xbf\xf1\x05\xd2\xce\xe3\xc3\x86\x2d\xf5\x1a\xd7\x6b\x04\x83\x24\x9f\x77\x3a\x7f\x64\xc9\x23\x8d\xf8\x5f\x48\xd5\xc3\x07\x87\xdd\xc0\xed\x22\x37\x10\xf1\x1f\x25\xa7\xd7\x3f\xeb\x4f\xfa\xff\x71\x76\x6e\x20\xc2\x18\x23\x8c\x25\xf9\x3b\xa4\x68\x6f\xb3\x1e\x3a\x7c\x48\x77\xbe\x05\x00\x00\xff\xff\x05\xda\xc8\x31\x07\x08\x00\x00")

func templatesGenRoutesJsonGoTplBytes() ([]byte, error) {
	return bindataRead(
		_templatesGenRoutesJsonGoTpl,
		"templates/gen/routes.json.go.tpl",
	)
}

func templatesGenRoutesJsonGoTpl() (*asset, error) {
	bytes, err := templatesGenRoutesJsonGoTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/gen/routes.json.go.tpl", size: 2055, mode: os.FileMode(0644), modTime: time.Unix(1606695221, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xc9, 0x1a, 0x85, 0x7c, 0x23, 0x36, 0x83, 0xf9, 0x41, 0x67, 0x67, 0x76, 0xf, 0xc9, 0x85, 0x49, 0x2, 0x56, 0x4d, 0xd1, 0x28, 0xc7, 0xd0, 0xd, 0x36, 0x8, 0xbb, 0xf0, 0xc0, 0x4e, 0x86, 0x28}}
	return a, nil
}

var _templatesGenView_createGoHtmlTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x52\x4d\xcb\xdb\x30\x0c\x3e\xb7\xbf\x42\x88\x5d\x93\xdc\x47\xd2\xcb\x60\xb0\xc3\xca\xa0\x47\x63\x86\x13\x2b\x7d\xcd\x1c\x39\x38\x4a\xbb\x52\xf2\xdf\x47\x52\x37\x6f\xb3\x9e\x8c\x1f\xc9\xcf\x87\x2c\xa5\x32\xf8\x32\x34\xa1\xa7\x5f\x46\x3e\xe0\x6b\x05\xf9\x69\xbd\x65\x5a\xef\xef\x77\x4b\xad\x63\x02\x14\x27\x9e\x70\x9a\x8e\x74\x05\xa5\xf2\xa3\xe9\x48\xeb\xfb\x9d\xd8\x4e\xd3\x4b\x5b\x1d\xec\x0d\xa7\x69\x5f\x5a\x77\x81\xc6\x9b\x61\xa8\xb0\x09\x2c\xc6\x31\x45\x3c\xec\x77\x9b\x82\x89\x76\xc6\xde\xc0\x6c\xa1\x99\x2b\xbb\xb2\x0d\xb1\x03\x36\x1d\x55\xc8\x74\xfd\x9d\xb4\x4f\x6c\xfe\x90\xd6\x08\x1d\xc9\x47\xb0\x15\xf6\x61\x10\x04\xd3\x88\x0b\x5c\xa1\x52\x9f\xb1\xb4\x2e\xb6\x8f\x0a\xa6\xeb\x83\x7c\x57\xb6\x8e\xbc\x1d\x48\x1e\xd7\x5d\xe9\xe9\x4c\x6c\x0f\x9b\x94\x65\x91\xd0\x47\x8f\x52\xd1\xf0\x99\x20\xff\x19\x2c\xf9\xfc\xfb\xc2\xa0\xf5\xb3\x98\x81\x6b\x81\x83\x40\x7e\x0c\x3f\x78\xa0\x28\xcf\xda\x6b\xca\x39\x55\x76\x8e\x61\xec\x93\x93\x59\xdb\xd4\xe4\xa1\x0d\x71\xf6\x9f\x9f\x24\x8e\x8d\x2c\xec\x5a\xe3\xe1\x7f\xa4\x2c\x96\xf6\xf5\xb1\xe3\x7e\x14\x90\x5b\x4f\x15\x0a\xfd\x15\x4c\x33\x7b\x63\xda\x38\x98\xbf\x26\x06\x8f\xc5\x33\x7f\x61\xdd\xe5\xf0\x19\x85\xd8\x2e\x7b\x90\x00\x62\xbb\x86\x79\x15\x1c\xc6\xba\x73\x82\x70\x31\x7e\xa4\x0a\xbf\x45\x32\x42\xab\x52\x2d\x0c\xb5\x70\xd6\x47\xd7\x99\x78\x7b\x8a\x95\xc5\x66\xf8\x65\x31\x3b\x5a\xb6\x21\x99\x48\x67\x3a\xd2\xae\xfd\x0b\x00\x00\xff\xff\x4a\x7e\x93\xdd\xb3\x02\x00\x00")

func templatesGenView_createGoHtmlTplBytes() ([]byte, error) {
	return bindataRead(
		_templatesGenView_createGoHtmlTpl,
		"templates/gen/view_create.go.html.tpl",
	)
}

func templatesGenView_createGoHtmlTpl() (*asset, error) {
	bytes, err := templatesGenView_createGoHtmlTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/gen/view_create.go.html.tpl", size: 691, mode: os.FileMode(0644), modTime: time.Unix(1606695221, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x1c, 0x44, 0xd3, 0x6f, 0xcf, 0x6f, 0xfa, 0x5b, 0xf7, 0xea, 0x82, 0x3e, 0x4e, 0xcf, 0x1c, 0x3b, 0x2b, 0x6a, 0x16, 0x89, 0x69, 0xe8, 0xdf, 0x98, 0x79, 0x4b, 0x94, 0xe2, 0xbc, 0x87, 0x41, 0xa5}}
	return a, nil
}

var _templatesGenView_listGoHtmlTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x53\x3f\xeb\xdb\x30\x10\x9d\x93\x4f\x21\xcc\x6f\xb5\x34\x64\x2b\xb2\xbb\x94\x2e\x6d\x43\xc1\xd0\x45\x68\x50\xac\x4b\x25\xea\xc8\x45\xbe\x26\x04\xa1\xef\x5e\x24\xff\x4d\x93\x42\xa1\x4b\xee\xcf\xbb\x3b\xbd\x7b\x39\x0b\x51\x92\xb7\xa1\xed\x7f\xc2\x57\x85\x86\xbc\xab\x08\x6d\x96\xa8\x94\x72\x1f\x82\x86\xb3\x75\x40\x0a\xb4\xd8\x41\x11\xa3\x10\xf4\xa8\x2e\x20\x25\xf9\x6c\x07\x0c\x01\x9c\x8e\x71\x53\x77\xea\xf5\xbd\xc8\x99\x9b\x45\x43\xe8\x37\x0b\xb7\x0f\x0a\x55\x8c\x7b\xae\xed\x95\xb4\x9d\x1a\x86\xaa\x68\x7b\x87\xca\x3a\xf0\x45\xbd\xdf\x3d\x00\xca\xeb\x94\x7b\x4a\x96\x79\x72\x42\x76\xdc\x1c\xea\x47\x1e\x9c\x99\xc3\x08\xa1\x3a\x75\x30\xf7\x8d\x41\xfe\x2d\x4f\xbd\xd7\xe0\x61\x1c\x9e\x0a\x0d\x28\x3d\xfa\x3b\x8e\x7e\xf2\x92\x22\x5e\xb9\xef\x40\xe8\x97\x5e\x43\x47\x3f\x5a\xe8\xf4\x20\xe5\x08\x67\xdc\x9e\x89\xeb\x91\xd0\x63\xdf\x40\x07\x2d\x2e\x20\x47\x93\x78\x35\xe8\x7f\xb5\x98\x1b\xa5\xe4\x0c\x4d\xbd\x69\x06\xa7\xb3\xb2\xdb\xc4\x1c\x72\x36\xf3\x48\x5d\x0b\x3d\x8e\x69\xf5\xd1\x0f\x61\x62\x17\xe3\x2b\xea\x6f\x4e\x5d\xa0\x71\xea\x07\xe4\x3f\xf3\x38\x47\xdb\x07\xff\x63\xbd\x59\xaf\xa5\x90\x7e\x82\x7b\x5a\x87\x2b\x62\x3c\x9c\xab\x42\x88\xf5\x9e\xa4\x64\x42\xac\x8c\xa4\x7c\x6f\x75\x15\x02\xfd\x53\xa2\x18\x8b\xfa\x49\x9a\xb4\xea\x8b\xca\xbf\xbd\xcf\xd4\x8b\x11\x9c\xad\x8c\xff\x5d\xfb\xf9\xa6\xa7\xec\xa2\x3d\x67\xf9\x90\xf2\x6d\x32\x6d\xaf\xe9\x70\x47\x3b\x99\xf5\x63\xc8\xf6\x77\x00\x00\x00\xff\xff\x4b\xf6\x7b\x8c\x5d\x03\x00\x00")

func templatesGenView_listGoHtmlTplBytes() ([]byte, error) {
	return bindataRead(
		_templatesGenView_listGoHtmlTpl,
		"templates/gen/view_list.go.html.tpl",
	)
}

func templatesGenView_listGoHtmlTpl() (*asset, error) {
	bytes, err := templatesGenView_listGoHtmlTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/gen/view_list.go.html.tpl", size: 861, mode: os.FileMode(0644), modTime: time.Unix(1606695221, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xed, 0xbb, 0xb, 0x42, 0xb4, 0x24, 0xff, 0xff, 0xbf, 0xda, 0x8b, 0x19, 0x3f, 0xed, 0x1, 0xe7, 0xbe, 0x96, 0xfd, 0x3a, 0xeb, 0xbd, 0x1d, 0x4e, 0xe1, 0x69, 0xb7, 0x48, 0xdb, 0x52, 0x90, 0xd1}}
	return a, nil
}

var _templatesGenView_updateGoHtmlTpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x53\xc1\x8a\xdb\x30\x10\x3d\x7b\xbf\x62\x10\xbd\xc6\xbe\x17\x39\x85\xd2\xf6\x52\xba\x14\x42\x7b\x11\xa2\x4c\xac\x71\x22\x56\x96\x8c\x3c\xce\x36\x18\xff\x7b\x91\xa3\x64\xe3\xcd\xa1\xa7\x41\x4f\x33\x6f\xe6\x3d\x8d\x94\xda\xc0\x87\xa1\x09\x3d\xfd\x44\x3e\xc2\xc7\x1a\xca\xdd\xed\xb4\xd1\xfa\x69\x9a\x0c\xb5\xd6\x13\x08\xb6\xec\x48\xcc\xf3\x57\x63\x19\x94\x2a\x9f\xb1\x23\xad\xa7\x89\xbc\x99\xe7\xbb\xbc\x7d\x30\x67\xb1\x20\xaf\x96\x8f\x50\xfe\xb6\xf4\xfa\x05\x19\xe7\xf9\x49\x1a\x7b\x82\xc6\xe1\x30\xd4\xa2\x09\x9e\xd1\x7a\x8a\x62\xfb\x54\xac\x2e\x30\x9a\x84\x3d\x80\x9b\x85\x39\xdd\x14\xb2\x0d\xb1\x03\x8f\x1d\xd5\x82\x8c\xe5\x3f\x79\x9e\x9d\xc7\x17\xd2\x5a\x40\x47\x7c\x0c\xa6\x16\x7d\x18\x58\x00\x36\x6c\x83\xaf\x85\x52\x6f\x5a\xb5\xae\xd6\x45\x9f\xac\xa9\xa7\xa9\x54\xaa\xfc\x11\x0c\xb9\xf2\x3b\x9d\x77\x1c\xc7\x86\xbf\x59\x72\x46\xeb\x79\xbe\xf4\x2e\x64\x9b\x80\x81\xf8\x72\x2c\xa4\xa3\x03\x79\xb3\x5d\x1b\x23\xab\x0c\x5f\x92\x94\x8a\xe8\x0f\x04\x99\x7c\xe1\x1c\xb4\xce\x0c\x77\x4a\x93\xb2\xcd\x21\x86\xb1\xcf\xed\x52\x03\xdc\x93\x83\x36\xc4\x24\xa1\x5c\x4d\x25\xb6\xef\x11\x59\x2d\xe9\xb7\x62\xeb\xfb\x91\x81\xcf\x3d\xd5\x82\xe9\x2f\x8b\xec\xdb\x03\x53\x2e\x28\x8a\x13\xba\x91\x6a\x71\x31\xe3\xbd\x07\x70\x4b\x53\xca\xb6\x10\x22\x94\xcf\xe1\x57\x6f\x90\x09\x92\x67\x5a\x47\x42\x13\xbc\x3b\xd7\x82\xe3\x48\x42\x29\xf2\xe6\xaa\xb4\x28\x8a\x7b\x9d\x69\x09\x62\x70\xa2\xba\x5a\x59\x19\x7b\xba\x39\x76\x57\x27\x11\x8e\x91\xda\xff\x3c\x61\xe5\x6c\x7a\xee\xdc\x61\xcf\x1e\xf6\xec\x37\x86\x5a\x1c\x1d\x8b\xed\x67\x6c\x5e\x64\x85\xd7\x5e\xf7\xc6\x0c\xe3\xbe\xb3\x2c\x20\x4b\xbf\xe8\x79\x60\xea\xa3\xed\x30\x9e\xaf\xe3\xca\x6a\xb5\x09\xb2\x4a\x9a\x96\xcd\xcd\x32\x72\xcc\xe1\xed\xab\x2c\xf1\x5f\x00\x00\x00\xff\xff\x18\x00\xf4\x86\x7b\x03\x00\x00")

func templatesGenView_updateGoHtmlTplBytes() ([]byte, error) {
	return bindataRead(
		_templatesGenView_updateGoHtmlTpl,
		"templates/gen/view_update.go.html.tpl",
	)
}

func templatesGenView_updateGoHtmlTpl() (*asset, error) {
	bytes, err := templatesGenView_updateGoHtmlTplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/gen/view_update.go.html.tpl", size: 891, mode: os.FileMode(0644), modTime: time.Unix(1606695221, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xb1, 0x92, 0xac, 0xc4, 0x27, 0xdb, 0x5c, 0x3a, 0xda, 0x41, 0x1a, 0x7f, 0x10, 0x9, 0x5b, 0xcb, 0xdf, 0x2f, 0x77, 0x60, 0x60, 0xe9, 0x6c, 0x1, 0x24, 0xf0, 0x3e, 0x1b, 0xbb, 0x8d, 0x46, 0x85}}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetString returns the asset contents as a string (instead of a []byte).
func AssetString(name string) (string, error) {
	data, err := Asset(name)
	return string(data), err
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// MustAssetString is like AssetString but panics when Asset would return an
// error. It simplifies safe initialization of global variables.
func MustAssetString(name string) string {
	return string(MustAsset(name))
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetDigest returns the digest of the file with the given name. It returns an
// error if the asset could not be found or the digest could not be loaded.
func AssetDigest(name string) ([sha256.Size]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s can't read by error: %v", name, err)
		}
		return a.digest, nil
	}
	return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s not found", name)
}

// Digests returns a map of all known files and their checksums.
func Digests() (map[string][sha256.Size]byte, error) {
	mp := make(map[string][sha256.Size]byte, len(_bindata))
	for name := range _bindata {
		a, err := _bindata[name]()
		if err != nil {
			return nil, err
		}
		mp[name] = a.digest
	}
	return mp, nil
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/new/Taskfile.yml.tpl":        templatesNewTaskfileYmlTpl,
	"templates/new/attache.json.tpl":        templatesNewAttacheJsonTpl,
	"templates/new/dev.env.tpl":             templatesNewDevEnvTpl,
	"templates/new/gitignore.tpl":           templatesNewGitignoreTpl,
	"templates/new/go.mod.tpl":              templatesNewGoModTpl,
	"templates/new/index.go.html.tpl":       templatesNewIndexGoHtmlTpl,
	"templates/new/layout.go.html.tpl":      templatesNewLayoutGoHtmlTpl,
	"templates/new/main.go.tpl":             templatesNewMainGoTpl,
	"templates/new/prettierignore.tpl":      templatesNewPrettierignoreTpl,
	"templates/gen/model.go.tpl":            templatesGenModelGoTpl,
	"templates/gen/routes.go.tpl":           templatesGenRoutesGoTpl,
	"templates/gen/routes.json.go.tpl":      templatesGenRoutesJsonGoTpl,
	"templates/gen/view_create.go.html.tpl": templatesGenView_createGoHtmlTpl,
	"templates/gen/view_list.go.html.tpl":   templatesGenView_listGoHtmlTpl,
	"templates/gen/view_update.go.html.tpl": templatesGenView_updateGoHtmlTpl,
}

// AssetDebug is true if the assets were built with the debug flag enabled.
const AssetDebug = false

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"},
// AssetDir("data/img") would return []string{"a.png", "b.png"},
// AssetDir("foo.txt") and AssetDir("notexist") would return an error, and
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		canonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(canonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"templates": {nil, map[string]*bintree{
		"gen": {nil, map[string]*bintree{
			"model.go.tpl": {templatesGenModelGoTpl, map[string]*bintree{}},
			"routes.go.tpl": {templatesGenRoutesGoTpl, map[string]*bintree{}},
			"routes.json.go.tpl": {templatesGenRoutesJsonGoTpl, map[string]*bintree{}},
			"view_create.go.html.tpl": {templatesGenView_createGoHtmlTpl, map[string]*bintree{}},
			"view_list.go.html.tpl": {templatesGenView_listGoHtmlTpl, map[string]*bintree{}},
			"view_update.go.html.tpl": {templatesGenView_updateGoHtmlTpl, map[string]*bintree{}},
		}},
		"new": {nil, map[string]*bintree{
			"Taskfile.yml.tpl": {templatesNewTaskfileYmlTpl, map[string]*bintree{}},
			"attache.json.tpl": {templatesNewAttacheJsonTpl, map[string]*bintree{}},
			"dev.env.tpl": {templatesNewDevEnvTpl, map[string]*bintree{}},
			"gitignore.tpl": {templatesNewGitignoreTpl, map[string]*bintree{}},
			"go.mod.tpl": {templatesNewGoModTpl, map[string]*bintree{}},
			"index.go.html.tpl": {templatesNewIndexGoHtmlTpl, map[string]*bintree{}},
			"layout.go.html.tpl": {templatesNewLayoutGoHtmlTpl, map[string]*bintree{}},
			"main.go.tpl": {templatesNewMainGoTpl, map[string]*bintree{}},
			"prettierignore.tpl": {templatesNewPrettierignoreTpl, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory.
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively.
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(canonicalName, "/")...)...)
}
